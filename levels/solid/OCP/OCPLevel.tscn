[gd_scene load_steps=23 format=2]

[ext_resource path="res://levels/solid/OCP/OCPLevel.gd" type="Script" id=1]
[ext_resource path="res://entities/map/Map.tscn" type="PackedScene" id=2]
[ext_resource path="res://entities/doors/DoorSingle.tscn" type="PackedScene" id=3]
[ext_resource path="res://entities/level/PlayerSpawner.gd" type="Script" id=4]
[ext_resource path="res://levels/solid/OCP/info.tres" type="Resource" id=5]
[ext_resource path="res://levels/solid/OCP/slides/Slide.tscn" type="PackedScene" id=6]
[ext_resource path="res://entities/computer/Computer.tscn" type="PackedScene" id=7]
[ext_resource path="res://entities/Hint/Hint.tscn" type="PackedScene" id=8]
[ext_resource path="res://entities/slider/Slider.tscn" type="PackedScene" id=9]
[ext_resource path="res://entities/doors/Door.tscn" type="PackedScene" id=10]
[ext_resource path="res://entities/screen/WideScreen.tscn" type="PackedScene" id=11]
[ext_resource path="res://entities/Item.tscn" type="PackedScene" id=12]
[ext_resource path="res://entities/constraints/ComplexityConstraint.tscn" type="PackedScene" id=13]
[ext_resource path="res://entities/button/ButtonItem.tscn" type="PackedScene" id=14]
[ext_resource path="res://levels/solid/OCP/lightmap/lightmap.lmbake" type="BakedLightmapData" id=22]

[sub_resource type="GDScript" id=5]
script/source = "extends Door
"

[sub_resource type="GDScript" id=4]
script/source = "extends Screen

"

[sub_resource type="GDScript" id=1]
script/source = "extends Screen

var PasswordSetter=getObject(\"PasswordSetter\")
func subscribe():
	PasswordSetter.addScreen(self)

"

[sub_resource type="GDScript" id=2]
script/source = "extends Screen
"

[sub_resource type="GDScript" id=3]
script/source = "extends Screen
"

[sub_resource type="GDScript" id=6]
script/source = "extends Code

var screen1 = getObject(\"Screen1\")
var screen2 = getObject(\"Screen2\")
var screen3 = getObject(\"Screen3\")
var screen4 = getObject(\"Screen4\")
var password =\"\"

#This will help you in the solution
var screens : Array
func addScreen(screen:Screen):
	screens.append(screen)


#We need to make this function more general to accept any
#number of screens
#you can use for i in array.size() and array[i] to get access to elements

func findPassword() -> String:
	if screen1.getValue()!=\"000\":
		password=password+screen1.getValue()
	if screen2.getValue()!=\"000\":
		password=password+screen2.getValue()
	#... if we continue the same way the complexity will be increased
	#(a lot of conditions)
	return password
"

[sub_resource type="GDScript" id=7]
script/source = "extends WallButton

var door= getObject(\"Door\")
var PasswordSetter=getObject(\"PasswordSetter\")



func onButtonPressed():

	PasswordSetter.addScreen(getObject(\"Screen1\"))
	PasswordSetter.addScreen(getObject(\"Screen2\"))
	PasswordSetter.addScreen(getObject(\"Screen3\"))
	PasswordSetter.addScreen(getObject(\"Screen4\"))
	
	door.open(PasswordSetter.findPassword())

"

[node name="OCPLevel" type="Spatial"]
script = ExtResource( 1 )
level_info = ExtResource( 5 )
slider = NodePath("Slider")
map = NodePath("Map")
spawner = NodePath("PlayerSpawner")
hints = NodePath("Hints")

[node name="Slider" parent="." instance=ExtResource( 9 )]
slide_scenes = [ ExtResource( 6 ) ]

[node name="Hints" parent="." instance=ExtResource( 8 )]
slide_scenes = [ ExtResource( 6 ) ]

[node name="Map" parent="." instance=ExtResource( 2 )]
data = {
"cells": PoolIntArray( 1, 0, -1072300030, 65535, 0, -1073741822, 262145, 0, -1073610727, 327679, 0, -1073610727, 65535, 2, -1073741821, 262145, 2, -1073610727, 327679, 2, -1073610727, 2, 3, -1072300018, 65534, 3, -1072693234, 65535, 4, -1073741821, 262145, 4, -1073610727, 327679, 4, -1073610727, 65535, 6, -1073741821, 262145, 6, -1073610727, 327679, 6, -1073610727, 2, 7, -1072300023, 65534, 7, -1072693239, 1, 8, -1073086462, 65535, 8, -1072693246, 262145, 8, -1073610730, 327679, 8, -1073610730, 0, 9, -1073086427, 2, 9, -1073741793, 65534, 9, -1073741793, -131072, 65483, -1073741787, -131070, 65483, -1073741793, -65538, 65483, -1073741793, 131073, 65484, -1072562151, 196607, 65484, -1072562151, -131071, 65484, -1072300030, -65537, 65484, -1073741822, -131070, 65485, -1072300023, -65538, 65485, -1072693239, 131073, 65486, -1072562151, 196607, 65486, -1072562151, -131071, 65486, -1073086461, 131073, 65488, -1072562151, 196607, 65488, -1072562151, -131071, 65488, -1073086461, -131070, 65489, -1072300023, -65538, 65489, -1072693239, 131073, 65490, -1072562151, 196607, 65490, -1072562151, -131071, 65490, -1073086462, -65537, 65490, -1072693246, -131072, 65491, -1073086429, -131070, 65491, -1073741793, -65538, 65491, -1073741793, -131072, 65493, -1073741788, -131068, 65493, -1073741817, -131064, 65493, -1073741817, -131060, 65493, -1073741817, -131058, 65493, -1073741793, -65550, 65493, -1073741793, -65548, 65493, -1073741817, -65544, 65493, -1073741817, -65540, 65493, -1073741817, 131073, 65494, -1073217511, 131075, 65494, -1073217511, 131077, 65494, -1073217511, 131079, 65494, -1073217511, 131081, 65494, -1073217511, 131083, 65494, -1073217511, 131085, 65494, -1072431083, 196595, 65494, -1073217515, 196597, 65494, -1073217511, 196599, 65494, -1073217511, 196601, 65494, -1073217511, 196603, 65494, -1073217511, 196605, 65494, -1073217511, 196607, 65494, -1073217511, -131071, 65494, -1072300027, -131069, 65494, -1072300027, -131067, 65494, -1072300027, -131065, 65494, -1072300027, -131063, 65494, -1072300027, -131061, 65494, -1072300030, -131059, 65494, -1073741819, -65549, 65494, -1073086459, -65547, 65494, -1073741822, -65545, 65494, -1072300027, -65543, 65494, -1072300027, -65541, 65494, -1072300027, -65539, 65494, -1072300027, -65537, 65494, -1072300027, -131058, 65495, -1072300018, -65550, 65495, -1072693234, 131073, 65496, -1073217511, 131075, 65496, -1073217511, 131077, 65496, -1073217511, 131079, 65496, -1073217511, 131081, 65496, -1073217511, 131083, 65496, -1073217511, 131085, 65496, -1073217511, 196595, 65496, -1073217511, 196597, 65496, -1073217511, 196599, 65496, -1073217511, 196601, 65496, -1073217511, 196603, 65496, -1073217511, 196605, 65496, -1073217511, 196607, 65496, -1073217511, -131071, 65496, -1072693247, -131069, 65496, -1072693247, -131067, 65496, -1072693247, -131065, 65496, -1072693247, -131063, 65496, -1072693247, -131061, 65496, -1073086459, -131059, 65496, -1073741819, -65549, 65496, -1073086459, -65547, 65496, -1073741819, -65545, 65496, -1072693247, -65543, 65496, -1072693247, -65541, 65496, -1072693247, -65539, 65496, -1072693247, -65537, 65496, -1072693247, 131073, 65498, -1073217511, 131075, 65498, -1073217511, 131077, 65498, -1073217511, 131079, 65498, -1073217511, 131081, 65498, -1073217513, 131083, 65498, -1073217511, 131085, 65498, -1073217511, 196595, 65498, -1073217511, 196597, 65498, -1073217511, 196599, 65498, -1073217513, 196601, 65498, -1073217511, 196603, 65498, -1073217511, 196605, 65498, -1073217511, 196607, 65498, -1073217511, -131071, 65498, -1072693247, -131069, 65498, -1072693247, -131067, 65498, -1072693247, -131065, 65498, -1072693247, -131063, 65498, -1072693247, -131061, 65498, -1073086459, -131059, 65498, -1073741819, -65549, 65498, -1073086459, -65547, 65498, -1073741819, -65545, 65498, -1072693247, -65543, 65498, -1072693247, -65541, 65498, -1072693247, -65539, 65498, -1072693247, -65537, 65498, -1072693247, -131068, 65499, -1073741793, -131058, 65499, -1072300018, -65550, 65499, -1072693234, -65540, 65499, -1073741793, 131073, 65500, -1072562156, 131075, 65500, -1072562156, 131077, 65500, -1073217511, 131079, 65500, -1073217511, 131081, 65500, -1073217513, 131083, 65500, -1073217511, 131085, 65500, -1073217511, 196595, 65500, -1073217511, 196597, 65500, -1073217511, 196599, 65500, -1073217513, 196601, 65500, -1073217511, 196603, 65500, -1073217511, 196605, 65500, -1072562156, 196607, 65500, -1072562156, -131071, 65500, -1072693244, -131069, 65500, -1072693244, -131067, 65500, -1072693219, -131065, 65500, -1072693247, -131063, 65500, -1072693247, -131061, 65500, -1073086459, -131059, 65500, -1073741819, -65549, 65500, -1073086459, -65547, 65500, -1073741819, -65545, 65500, -1072693247, -65543, 65500, -1072693247, -65541, 65500, -1072693219, -65539, 65500, -1072693244, -65537, 65500, -1072693244, 131073, 65502, -1072562156, 131075, 65502, -1072562156, 131077, 65502, -1073217511, 131079, 65502, -1073217511, 131081, 65502, -1073217513, 131083, 65502, -1073217511, 131085, 65502, -1073217511, 196595, 65502, -1073217511, 196597, 65502, -1073217511, 196599, 65502, -1073217513, 196601, 65502, -1073217511, 196603, 65502, -1073217511, 196605, 65502, -1072562156, 196607, 65502, -1072562156, -131071, 65502, -1072693244, -131069, 65502, -1072693244, -131067, 65502, -1072693219, -131065, 65502, -1072693247, -131063, 65502, -1072693247, -131061, 65502, -1073086459, -131059, 65502, -1073741819, -65549, 65502, -1073086459, -65547, 65502, -1073741819, -65545, 65502, -1072693247, -65543, 65502, -1072693247, -65541, 65502, -1072693219, -65539, 65502, -1072693244, -65537, 65502, -1072693244, -131058, 65503, -1072300018, -65550, 65503, -1072693234, 131073, 65504, -1072562156, 131075, 65504, -1072562156, 131077, 65504, -1073217511, 131079, 65504, -1073217511, 131081, 65504, -1073217513, 131083, 65504, -1073217511, 131085, 65504, -1073217511, 196595, 65504, -1073217511, 196597, 65504, -1073217511, 196599, 65504, -1073217513, 196601, 65504, -1073217511, 196603, 65504, -1073217511, 196605, 65504, -1072562156, 196607, 65504, -1072562156, -131071, 65504, -1072693244, -131069, 65504, -1072693244, -131067, 65504, -1072693219, -131065, 65504, -1072693247, -131063, 65504, -1072693247, -131061, 65504, -1073086459, -131059, 65504, -1073741819, -65549, 65504, -1073086459, -65547, 65504, -1073741819, -65545, 65504, -1072693247, -65543, 65504, -1072693247, -65541, 65504, -1072693219, -65539, 65504, -1072693244, -65537, 65504, -1072693244, 131073, 65506, -1072562156, 131075, 65506, -1072562156, 131077, 65506, -1073217511, 131079, 65506, -1073217511, 131081, 65506, -1073217513, 131083, 65506, -1073217511, 131085, 65506, -1073217511, 196595, 65506, -1073217511, 196597, 65506, -1073217511, 196599, 65506, -1073217513, 196601, 65506, -1073217511, 196603, 65506, -1073217511, 196605, 65506, -1072562156, 196607, 65506, -1072562156, -131071, 65506, -1072693244, -131069, 65506, -1072693244, -131067, 65506, -1072693219, -131065, 65506, -1072693247, -131063, 65506, -1072693247, -131061, 65506, -1073086459, -131059, 65506, -1073741819, -65549, 65506, -1073086459, -65547, 65506, -1073741819, -65545, 65506, -1072693247, -65543, 65506, -1072693247, -65541, 65506, -1072693219, -65539, 65506, -1072693244, -65537, 65506, -1072693244, -131068, 65507, -1073741793, -131058, 65507, -1072300018, -65550, 65507, -1072693234, -65540, 65507, -1073741793, 131073, 65508, -1073217511, 131075, 65508, -1073217511, 131077, 65508, -1073217511, 131079, 65508, -1073217511, 131081, 65508, -1073217513, 131083, 65508, -1073217511, 131085, 65508, -1073217511, 196595, 65508, -1073217511, 196597, 65508, -1073217511, 196599, 65508, -1073217513, 196601, 65508, -1073217511, 196603, 65508, -1073217511, 196605, 65508, -1073217511, 196607, 65508, -1073217511, -131071, 65508, -1072693247, -131069, 65508, -1072693247, -131067, 65508, -1072693247, -131065, 65508, -1072693247, -131063, 65508, -1072693247, -131061, 65508, -1073086459, -131059, 65508, -1073741819, -65549, 65508, -1073086459, -65547, 65508, -1073741819, -65545, 65508, -1072693247, -65543, 65508, -1072693247, -65541, 65508, -1072693247, -65539, 65508, -1072693247, -65537, 65508, -1072693247, 131073, 65510, -1073217511, 131075, 65510, -1073217511, 131077, 65510, -1073217511, 131079, 65510, -1073217511, 131081, 65510, -1073217511, 131083, 65510, -1073217511, 131085, 65510, -1073217511, 196595, 65510, -1073217511, 196597, 65510, -1073217511, 196599, 65510, -1073217511, 196601, 65510, -1073217511, 196603, 65510, -1073217511, 196605, 65510, -1073217511, 196607, 65510, -1073217511, -131071, 65510, -1072693247, -131069, 65510, -1072693247, -131067, 65510, -1072693247, -131065, 65510, -1072693247, -131063, 65510, -1072693247, -131061, 65510, -1073086459, -131059, 65510, -1073741819, -65549, 65510, -1073086459, -65547, 65510, -1073741819, -65545, 65510, -1072693247, -65543, 65510, -1072693247, -65541, 65510, -1072693247, -65539, 65510, -1072693247, -65537, 65510, -1072693247, -131058, 65511, -1072300018, -65550, 65511, -1072693234, 131073, 65512, -1073217511, 131075, 65512, -1073217511, 131077, 65512, -1073217511, 131079, 65512, -1073217511, 131081, 65512, -1073217511, 131083, 65512, -1073217511, 131085, 65512, -1072562155, 196595, 65512, -1072562155, 196597, 65512, -1072562151, 196599, 65512, -1073217511, 196601, 65512, -1073217511, 196603, 65512, -1073217511, 196605, 65512, -1073217511, 196607, 65512, -1073217511, -131071, 65512, -1073086458, -131069, 65512, -1072693243, -131067, 65512, -1072693243, -131065, 65512, -1072693243, -131063, 65512, -1072693243, -131061, 65512, -1073086462, -131059, 65512, -1073741819, -65549, 65512, -1073086459, -65547, 65512, -1072693246, -65545, 65512, -1072693243, -65543, 65512, -1072693243, -65541, 65512, -1072693243, -65539, 65512, -1072693243, -65537, 65512, -1072693242, -131070, 65513, -1073741793, -131068, 65513, -1073086450, -131064, 65513, -1073086450, -131060, 65513, -1073086450, -131058, 65513, -1073741793, -65550, 65513, -1073741793, -65548, 65513, -1073086450, -65544, 65513, -1073086450, -65540, 65513, -1073086450, -65538, 65513, -1073741793, 131073, 65514, -1073217511, 196607, 65514, -1073217511, -65537, 65514, -1073741821, -131070, 65515, -1072300018, -65538, 65515, -1072693234, 131073, 65516, -1073217511, 196607, 65516, -1073217511, 196609, 65517, -1073217511, 262143, 65517, -1073217511, -131070, 65517, -1073741794, -65538, 65517, -1073741794, -65536, 65517, -1073741789, -65536, 65518, -1073086448, 196609, 65519, -1073217511, 262143, 65519, -1073217511, -65534, 65519, -1072300018, -2, 65519, -1072693234, 0, 65521, -1073086448, 196609, 65521, -1073217511, 262143, 65521, -1073217511, 262146, 65521, -1072627682, -65534, 65521, -1072300001, -2, 65521, -1072300001, 0, 65522, -1073741790, 262145, 65522, -1073610727, 327679, 65522, -1073610727, 2, 65523, -1072300018, 65534, 65523, -1072693234, 65536, 65524, -1073086448, 262145, 65524, -1073610727, 327679, 65524, -1073610727, 131071, 65525, -1073741821, 262145, 65526, -1073610727, 327679, 65526, -1073610727, 2, 65527, -1072300018, 65534, 65527, -1072693234, 131071, 65527, -1073741821, 262145, 65528, -1073610727, 327679, 65528, -1073610727, 131071, 65529, -1073741821, 262145, 65530, -1073610727, 327679, 65530, -1073610727, 2, 65531, -1072300018, 65534, 65531, -1072693234, 131071, 65531, -1073741821, 65536, 65532, -1073741808, 262145, 65532, -1073610727, 327679, 65532, -1073610727, 262145, 65534, -1073610727, 327679, 65534, -1073610727, 2, 65535, -1072300018, 65534, 65535, -1072693234 )
}

[node name="PlayerSpawner" type="Position3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.478787, 1.45278, 6.21731 )
script = ExtResource( 4 )

[node name="BakedLightmap" type="BakedLightmap" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.25098, -16.7899 )
extents = Vector3( 16.0524, 6.28859, 37.6049 )
capture_quality = 0
light_data = ExtResource( 22 )

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.67865, 3.04695, -6.12529 )
light_energy = 0.5
omni_range = 5.91486

[node name="OmniLight4" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.67865, 0.990132, -19.1432 )
light_energy = 0.744
omni_range = 6.36972

[node name="OmniLight2" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.412033, 1.0725, -49.4653 )
light_energy = 0.5
omni_range = 49.6241

[node name="OmniLight6" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.412033, 1.51139, -29.0094 )
light_energy = 1.045
omni_range = 20.9293

[node name="OmniLight3" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.418998, 2.26872, 4.19321 )
light_energy = 0.678
omni_range = 12.7078

[node name="DoorSingle2" parent="." instance=ExtResource( 3 )]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0.465099, 0.574933, 9.39461 )

[node name="Computer" parent="." instance=ExtResource( 7 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.441729, -1.48539, -33.2024 )

[node name="Door" parent="." instance=ExtResource( 10 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.474108, -1.45129, -42.2479 )
code = SubResource( 5 )
display_name = "Door"
is_programmable = true
locked = true

[node name="DoorSingle" parent="." instance=ExtResource( 3 )]
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0.546838, -1.45117, -52.8196 )
is_interactable = true

[node name="ScreenItem" parent="." instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.34374, 1.31544, -42.7582 )
code = SubResource( 4 )
display_name = "Screen1"
description = "Value 1"
is_programmable = true
locked = true

[node name="ScreenItem2" parent="." instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.35893, 0.897665, -42.7394 )
code = SubResource( 1 )
display_name = "Screen2"
description = "Value 2"
is_programmable = true
locked = true

[node name="ScreenItem3" parent="." instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.35893, 0.474055, -42.7394 )
code = SubResource( 2 )
display_name = "Screen3"
description = "Value 3"
is_programmable = true
locked = true

[node name="ScreenItem4" parent="." instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.35893, 0.0384985, -42.7394 )
code = SubResource( 3 )
display_name = "Screen4"
description = "Value 4"
is_programmable = true
locked = true

[node name="Item" parent="." instance=ExtResource( 12 )]
code = SubResource( 6 )
display_name = "PasswordSetter"
is_programmable = true
starting_script = "extends Code

var screen1 = getObject(\"Screen1\")
var screen2 = getObject(\"Screen2\")
var screen3 = getObject(\"Screen3\")
var screen4 = getObject(\"Screen4\")
var password =\"\"

#This will help you in the solution
var screens=[]
func addScreen(screen):
	screens.append(screen)


#We need to make this function more general while reducing its complexity 
func findPassword() -> String:
	if screen1.getValue()!=\"000\":
		password=password+screen1.getValue()
	if screen2.getValue()!=\"000\":
		password=password+screen2.getValue()
	
	return password
"

[node name="ExpressionChanger" type="Timer" parent="."]
wait_time = 4.0
autostart = true

[node name="PasswordChecker" type="Timer" parent="."]
autostart = true

[node name="cycLimitConstraint" parent="." instance=ExtResource( 13 )]
cyc_limit = 5

[node name="Button" parent="." instance=ExtResource( 14 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.44172, 0.182099, -42.5819 )
code = SubResource( 7 )
display_name = "Button"
is_programmable = true
connect_pressed = true

[node name="HintTimer" type="Timer" parent="."]
wait_time = 300.0
autostart = true

[connection signal="interact" from="DoorSingle" to="." method="_on_DoorSingle_interact"]
[connection signal="timeout" from="ExpressionChanger" to="." method="_on_ExpressionChanger_timeout"]
[connection signal="pressed" from="Button" to="." method="_on_Button_pressed"]
[connection signal="timeout" from="HintTimer" to="." method="_on_HintTimer_timeout"]
